=begin
  The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

  1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

  Let us list the factors of the first seven triangle numbers:

  1: 1
  3: 1,3
  6: 1,2,3,6
  10: 1,2,5,10
  15: 1,3,5,15
  21: 1,3,7,21
  28: 1,2,4,7,14,28
  We can see that 28 is the first triangle number to have over five divisors.

  What is the value of the first triangle number to have over five hundred divisors?
=end

PRIMES = [2,3,5,7,11,13,17,19]

def triangle_number(n)
  n*(n+1)/2
end

def divisors_count(n)
  count = 1
  2.upto(Math.sqrt(n)) do |f|
    count += 2 if (n%f).zero?
  end
  count
end

def triangular_number_with_divisor_count(divisors)
  n = 0
  while(divisors_count(triangle_number(n)) < divisors)
    n += 1
  end
  triangle_number(n)
end

require 'test/unit'
class HighlyDivisibleTriangularTest < Test::Unit::TestCase

  def test_triangular_number
    assert_equal 28, triangular_number_with_divisor_count(500)
  end

end
